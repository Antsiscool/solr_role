---

- name: SolrCloud | Agent installation | Install required packages
  apt:
    pkg: "{{ solr_agents_required_libs }}"
    state: present
  when: solr_agents_required_libs is defined

- name: SolrCloud | Agent installation | Ensure install path
  file:
    path: "{{ solr_installation_dir }}/{{ item.name }}"
    state: directory
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
  with_items: '{{ solr_agents_config }}'

- name: SolrCloud | Agent installation | Check if agent is installed
  stat:
    path: "{{ solr_installation_dir }}/{{ item.0.name }}/{{ item.1 | basename }}"
  register: agent_file_exists
  with_subelements:
    - "{{ solr_agents_config }}"
    - vm_opts

- name: SolrCloud | Agent installation | Download agent
  get_url:
    dest: "/tmp"
    url: "{{ item.download_url }}"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
  register: agent_downloaded
  with_items: '{{ solr_agents_config }}'

- name: SolrCloud | Agent installation | Unarchive package
  unarchive:
    src: "/tmp/{{ item.download_url | basename }}"
    dest: "{{ solr_installation_dir }}"
    remote_src: true
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
    mode: 0755
  when: agent_downloaded.changed
  with_items: '{{ solr_agents_config }}'
  tags:
    - skip_ansible_lint

- name: SolrCloud | Agent installation | Check configuration files
  set_fact:
    solr_agent_configuration: "{{ solr_agent_configuration|default([]) + [ {'name': item.0.name, 'file': item.1, 'params': item.0.params}] }}"
  with_subelements:
    - "{{ solr_agents_config }}"
    - configuration_files

- name: SolrCloud | Agent installation | Configure the Java agent
  template:
    src: "{{ solr_agents_template_path }}/{{ item.name }}/{{ item.file }}.j2"
    dest: "{{ solr_installation_dir }}/{{ item.name }}/{{ item.file }}"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
  with_items:
    - '{{ solr_agent_configuration }}'

- name: SolrCloud | Agent installation | Check vm options
  set_fact:
    solr_agent_vm_opts: "{% set solr_agent_vm_opts = solr_agent_vm_opts|default([]) + [item.1] %}{{solr_agent_vm_opts|list}}"
  with_subelements:
    - "{{ solr_agents_config }}"
    - vm_opts

# - name: SolrCloud | Agent installation | Check previous solr installation
#   stat:
#     path: /etc/default/solr.in.sh
#   register: agent_previous_solr_exists

# - name: SolrCloud | Agent installation | Configuring SolrCloud init script with agents config
#   template:
#     src: "{{ solr_templates_dir }}/solr.in.sh.j2"
#     dest: /etc/default/solr.in.sh
#     force: true
#   when: agent_previous_solr_exists.stat is defined and agent_previous_solr_exists.stat.exists == True
#   notify: restart SolrCloud
